"""
Django settings for expatcare project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

ENVIRONMENT = os.getenv('DJANGO_ENVIRONMENT', 'development')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=m^)n&zcexskvxb3thsip&d_6g9xl7b-&e-!=m+x-fv5!kn)n8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*", "https://api.welfareph.com"]


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_countries',
    'rangefilter',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'dj_rest_auth',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'crispy_forms',
    'crispy_bootstrap4',
    'advance',
    'employee',
    'cases',
    'chats',
    'fra',
    'statement_of_facts',
    'support'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'expatcare.middleware.CustomAdminMiddleware',
]

ROOT_URLCONF = 'expatcare.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'expatcare.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

if ENVIRONMENT == 'production':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.getenv('MYSQL_DATABASE'),
            'USER': os.getenv('MYSQL_USER'),
            'PASSWORD': os.getenv('MYSQL_PASSWORD'),
            'HOST': os.getenv('MYSQL_HOST', 'localhost'),
            'PORT': os.getenv('MYSQL_PORT', '3306'),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#################################
######## EXTRA CONFIG ###########
#################################

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]

# Media files (Uploaded by users)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Allauth settings
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None

# REST_AUTH_REGISTER_SERIALIZERS = {
#     'REGISTER_SERIALIZER': 'users.serializers.CustomRegisterSerializer',
# }

REST_FRAMEWORK = {
   # 'DEFAULT_AUTHENTICATION_CLASSES': [
   #     'rest_framework.authentication.SessionAuthentication',
   #     'rest_framework.authentication.TokenAuthentication',
   # ],
   # 'DEFAULT_PERMISSION_CLASSES': [
   #     'rest_framework.permissions.IsAuthenticated',
    #],
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
}

SITE_ID = 1

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only


# Other Config
CSRF_TRUSTED_ORIGINS=['https://api.welfareph.com']
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

#SESSION_COOKIE_SECURE = True
#CSRF_COOKIE_SECURE = True
#SESSION_COOKIE_HTTPONLY = True
#CSRF_COOKIE_HTTPONLY = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Email settings
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = env('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

# AUTH_USER_MODEL = 'users.User'

X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]

JAZZMIN_SETTINGS = {
    "site_title": "WelfarePh",
    "site_header": "WelfarePH",
    "site_brand": "WelfarePH",
    "site_logo": "expatcare/logo.png",

    "topmenu_links": [
        {"name": "Dashboard", "url": "admin:index"},
        {"app": "support", "label": "Support"},
    ],
    "order_with_respect_to": ["support", "cases", "fra", "statement_of_facts", "employee"],

    # "custom_links": {
    #     "employee": [ 
    #         {
    #             "name": "Employees With Complaints",
    #             "url": "/admin/employee/employeewithcomplaints/",
    #             "icon": "fas fa-exclamation-triangle", 
    #             "permissions": ["employee.view_employee"],
    #         },
    #         {
    #             "name": "Employees With Hearings",
    #             "url": "/admin/employee/employeewithhearings/",
    #             "icon": "fas fa-gavel", 
    #             "permissions": ["employee.view_employee"],
    #         },
    #         {
    #             "name": "Employees With No Communication",
    #             "url": "/admin/employee/employeenocommunication/",
    #             "icon": "fas fa-bell-slash", 
    #             "permissions": ["employee.view_employee"],
    #         },
    #         {
    #             "name": "Employees With Closed Cases",
    #             "url": "/admin/employee/employeeclosedcases/",
    #             "icon": "fas fa-folder", 
    #             "permissions": ["employee.view_employee"],
    #         },
    #         {
    #             "name": "Employees Arrived",
    #             "url": "/admin/employee/employeearrived/",
    #             "icon": "fas fa-plane-arrival", 
    #             "permissions": ["employee.view_employee"],
    #         },
    #         {
    #             "name": "Employees Blacklisted",
    #             "url": "/admin/employee/employeeblacklisted/",
    #             "icon": "fas fa-ban", 
    #             "permissions": ["employee.view_employee"],
    #         }
    #     ]
    # },

    "icons": {
        "support.chatsupport": "fas fa-comments",
        "cases.case": "fas fa-briefcase",
        "fra.fra": "fas fa-building",
        "statement_of_facts.statementoffacts": "fas fa-file-alt",
        "employee.employee": "fas fa-user",
        "employee.employeewithcomplaints": "fas fa-exclamation-triangle",
        "employee.employeewithhearings": "fas fa-gavel",
        "employee.employeenocommunication": "fas fa-bell-slash",
        "employee.employeeclosedcases": "fas fa-folder",
        "employee.employeearrived": "fas fa-plane-arrival",
        "employee.employeeblacklisted": "fas fa-ban",
    },

    "related_modal_active": True,
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'